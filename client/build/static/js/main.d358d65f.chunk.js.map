{"version":3,"sources":["context/global/globalContext.js","data/TMDB_GENRES_DATA.js","component/MovieItem.js","component/Spinner.js","component/Pagination.js","component/ResultsNotFound.js","component/MoviesList.js","component/ErrorHund.js","component/Pages/Home.js","data/TMDB_CONTRIES_DATA.js","component/DetailsItem.js","component/Pages/DeatailsPage.js","component/Pages/TopMoviesPage.js","component/Pages/UpComingPage.js","component/RadomMovie.js","component/Pages/RandomPage.js","component/Search.js","component/Navbar.js","App.js","context/global/globalReducer.js","context/global/types.js","context/global/GlobalState.js","index.js"],"names":["globalContext","createContext","TMDB_GENRES_IDS","id","name","withRouter","movieData","poster_path","vote_average","genre_ids","release_date","title","history","className","onClick","push","alt","src","slice","map","genreId","key","TMDB_GENRES_DATA","filter","item","getGenre","Spinner","Pagination","i","totalPages","useContext","setCurrentPage","currentPage","pagination","style","cursor","color","length","ResultsNotFound","textAlign","MoviesList","showSpineer","moviesList","pageTitle","movie","ErrorHund","gloabalContext","err","getMovies","getMovieDetails","getRandomMovie","Home","searchKey","loading","clearMovies","setCurrentPagePath","currentPagePath","searchKeyHund","useEffect","TMDB_CONTRIES_DATA","iso_3166_1","english_name","DetailsItem","singleMovieData","original_language","runtime","genres","production_companies","overview","movieCast","backgroundImage","toUpperCase","getCountryName","genre","cast","profile_path","DeatailsPage","match","GloabalContext","movieDetails","clearMovieDetails","params","width","minHeight","zIndex","position","backgroundColor","background","paddingTop","showSpinner","TopMoviesPage","TopSeriesPage","RandomPage","randomMovie","onChange","e","target","value","type","placeholder","Navbar","path","link","to","App","exact","component","DetailsPage","UpComingPage","state","action","payload","tes","GlobalState","props","useReducer","globalReducer","seriesList","dispatch","setLoading","bool","setError","val","setTotalPages","Provider","keyVal","fetchBy","axios","get","then","res","data","results","total_pages","catch","randomId","Math","floor","random","response","children","app","ReactDOM","render","document","getElementById"],"mappings":"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,IAARH,GACFG,IAwBF,OACE,yBAAKrC,UAAU,YACb,sDACA,4BAAQC,QAxBG,WACb,OAAQiC,GACN,KAAK,EACHC,IACA,MACF,KAAK,EACHC,IACA,MACF,KAAK,EACHD,EAAU,aACV,MACF,KAAK,EACHA,EAAU,YACV,MACF,KAAK,EACHE,IACA,MACF,QACE,OAAO,QAMT,eCuBSC,EArDF,WAAM,MAebrB,qBAAW9B,GAZbgD,EAHe,EAGfA,UACAI,EAJe,EAIfA,UACAV,EALe,EAKfA,WACAW,EANe,EAMfA,QACAN,EAPe,EAOfA,IACAf,EARe,EAQfA,YACAD,EATe,EASfA,eACAuB,EAVe,EAUfA,YACAzB,EAXe,EAWfA,WACA0B,EAZe,EAYfA,mBACAC,EAbe,EAafA,gBACAC,EAde,EAcfA,cAqBF,OAlBAC,qBAAU,WACRV,IACAM,IACAC,EAAmB,UAElB,CAACH,EAAWpB,IAOf0B,qBAAU,WACR3B,EAAe,GACf0B,EAAc,MAEb,IAGD,kBAAC,WAAD,KACE,yBAAK5C,UAAU,gBACZkC,EACC,kBAAC,EAAD,MAEA,kBAAC,EAAD,CACElB,WAAYA,EACZY,YAAaY,EACbX,WAAYA,EACZC,UAAWa,OC86BRG,EAl+BY,CACzB,CACEC,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,wBAEhB,CACED,WAAY,KACZC,aAAc,eAEhB,CACED,WAAY,KACZC,aAAc,uBAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,wBAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,kBAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,0BAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,gBAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,qBAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,iBAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,kBAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,4BAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,eAEhB,CACED,WAAY,KACZC,aAAc,iBAEhB,CACED,WAAY,KACZC,aAAc,gBAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,yBAEhB,CACED,WAAY,KACZC,aAAc,QAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,oBAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,kBAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,sBAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,kBAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,QAEhB,CACED,WAAY,KACZC,aAAc,oBAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,kBAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,kBAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,iBAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,qBAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,gDAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,QAEhB,CACED,WAAY,KACZC,aAAc,iBAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,8BAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,kCAEhB,CACED,WAAY,KACZC,aAAc,QAEhB,CACED,WAAY,KACZC,aAAc,QAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,mBAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,uBAEhB,CACED,WAAY,KACZC,aAAc,eAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,kBAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,oCAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,iBAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,0BAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,oBAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,QAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,4BAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,iBAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,kBAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,eAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,QAEhB,CACED,WAAY,KACZC,aAAc,eAEhB,CACED,WAAY,KACZC,aAAc,QAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,QAEhB,CACED,WAAY,KACZC,aAAc,oBAEhB,CACED,WAAY,KACZC,aAAc,oBAEhB,CACED,WAAY,KACZC,aAAc,eAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,kBAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,2BAEhB,CACED,WAAY,KACZC,aAAc,mBAEhB,CACED,WAAY,KACZC,aAAc,eAEhB,CACED,WAAY,KACZC,aAAc,yBAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,gBAEhB,CACED,WAAY,KACZC,aAAc,mBAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,gCAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,gBAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,yBAEhB,CACED,WAAY,KACZC,aAAc,eAEhB,CACED,WAAY,KACZC,aAAc,wBAEhB,CACED,WAAY,KACZC,aAAc,aAEhB,CACED,WAAY,KACZC,aAAc,4BAEhB,CACED,WAAY,KACZC,aAAc,QAEhB,CACED,WAAY,KACZC,aAAc,+BAEhB,CACED,WAAY,KACZC,aAAc,QAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,eAEhB,CACED,WAAY,KACZC,aAAc,gBAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,SAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,uBAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,YAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,UAEhB,CACED,WAAY,KACZC,aAAc,wCAEhB,CACED,WAAY,KACZC,aAAc,4BAEhB,CACED,WAAY,KACZC,aAAc,WAEhB,CACED,WAAY,KACZC,aAAc,cAEhB,CACED,W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","file":"static/js/main.d358d65f.chunk.js","sourcesContent":["import {createContext} from 'react';\r\nconst globalContext = createContext();\r\nexport default globalContext ;","const TMDB_GENRES_IDS = [\r\n  {\r\n    id: 28,\r\n    name: \"Action\",\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Adventure\",\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Animation\",\r\n  },\r\n  {\r\n    id: 35,\r\n    name: \"Comedy\",\r\n  },\r\n  {\r\n    id: 80,\r\n    name: \"Crime\",\r\n  },\r\n  {\r\n    id: 99,\r\n    name: \"Documentary\",\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Drama\",\r\n  },\r\n  {\r\n    id: 10751,\r\n    name: \"Family\",\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Fantasy\",\r\n  },\r\n  {\r\n    id: 36,\r\n    name: \"History\",\r\n  },\r\n  {\r\n    id: 27,\r\n    name: \"Horror\",\r\n  },\r\n  {\r\n    id: 10402,\r\n    name: \"Music\",\r\n  },\r\n  {\r\n    id: 9648,\r\n    name: \"Mystery\",\r\n  },\r\n  {\r\n    id: 10749,\r\n    name: \"Romance\",\r\n  },\r\n  {\r\n    id: 878,\r\n    name: \"Science Fiction\",\r\n  },\r\n  {\r\n    id: 10770,\r\n    name: \"TV Movie\",\r\n  },\r\n  {\r\n    id: 53,\r\n    name: \"Thriller\",\r\n  },\r\n  {\r\n    id: 10752,\r\n    name: \"War\",\r\n  },\r\n  {\r\n    id: 37,\r\n    name: \"Western\",\r\n  },\r\n];\r\nexport default TMDB_GENRES_IDS;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport TMDB_GENRES_DATA from '../data/TMDB_GENRES_DATA';\r\nconst MovieItem = ({\r\n  movieData,\r\n  movieData: { poster_path, id, vote_average, genre_ids, release_date, title },\r\n  history\r\n}) => {\r\n  /// because TMDB gives only array of genrs ids without names this func gonna filter the up coming genre ids from the default geners list\r\n  const getGenre = id => {\r\n    if (genre_ids) {\r\n      const filterdGenre = TMDB_GENRES_DATA.filter(item => item.id === id);\r\n      // filter method return array with single filtred item object\r\n      return filterdGenre[0].name;\r\n    }\r\n  };\r\n  return (\r\n    <div className='movies-item' onClick={() => history.push(`/details/${id}`)}>\r\n      <span className='rating'>{vote_average}</span>\r\n      <img\r\n        alt='poster img'\r\n        src={`https://image.tmdb.org/t/p/w200${poster_path}`}\r\n      />\r\n      <h2 className='title'>\r\n        {title}\r\n        <span> {release_date ? `(${release_date.slice(0, 4)}) ` : null}</span>\r\n      </h2>\r\n      <div className='genre'>\r\n        {genre_ids\r\n          ? genre_ids\r\n              .slice(0, 2)\r\n              .map(genreId => <span key={genreId}> {getGenre(genreId)} </span>)\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieItem);\r\nMovieItem.propTypes = {\r\n  movieData: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired\r\n};\r\n","import React from \"react\";\r\nconst Spinner = () => {\r\n  return <div className='loader'>loadin..</div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport globalContext from '../context/global/globalContext';\r\nconst Pagination = ({ totalPages }) => {\r\n  // pull the context values\r\n  const { setCurrentPage, currentPage } = useContext(globalContext);\r\n  // the return array that we should map through in the dom\r\n  const pagination = [];\r\n  let i;\r\n  // chek if the number total pages that's api return set pagination as max pages to 10\r\n  if (totalPages < 10) {\r\n    //if total pages less then 10 set the pagination arr lengh to totalPages number\r\n    for (i = 1; i <= totalPages; i++) {\r\n      pagination.push(i);\r\n    }\r\n  } else {\r\n    // if the totalPages more then 10 pages set pagintion just to 10\r\n    for (i = 1; i <= 10; i++) {\r\n      pagination.push(i);\r\n    }\r\n  }\r\n  return (\r\n    <div className='pagination'>\r\n      <div\r\n        className='prev'\r\n        style={{ cursor: 'pointer' }}\r\n        onClick={() =>\r\n          currentPage !== 1 ? setCurrentPage(currentPage - 1) : 'disabled'\r\n        }\r\n      >\r\n        <i className='fa fa-arrow-left'></i>\r\n      </div>\r\n      {pagination\r\n        ? pagination.map(item => (\r\n            <div\r\n              key={item}\r\n              onClick={() => setCurrentPage(item)}\r\n              style={\r\n                item === currentPage\r\n                  ? { color: '#ffb100', cursor: 'pointer' }\r\n                  : null\r\n              }\r\n            >\r\n              {item}\r\n            </div>\r\n          ))\r\n        : null}\r\n      <div\r\n        className='next'\r\n        style={{ cursor: 'pointer' }}\r\n        onClick={() =>\r\n          currentPage !== pagination.length\r\n            ? setCurrentPage(currentPage + 1)\r\n            : null\r\n        }\r\n      >\r\n        <i className='fa fa-arrow-right'></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\nPagination.propTypes = {\r\n  totalPages: PropTypes.number.isRequired\r\n};\r\n","import React from \"react\";\r\n\r\nconst ResultsNotFound = () => {\r\n  return (\r\n    <div className='not-found' style={{ textAlign: \"center\", color: \"#FFF\" }}>\r\n      <h2>Oops ! </h2>\r\n      <h3>Results Not Found</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultsNotFound;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport MovieItem from \"./MovieItem\";\r\nimport Spinner from \"./Spinner\";\r\nimport Pagination from \"./Pagination\";\r\nimport ResultsNotFound from \"./ResultsNotFound\";\r\n\r\nconst MoviesList = ({ showSpineer, moviesList, totalPages, pageTitle }) => {\r\n  return (\r\n    <Fragment>\r\n      <h2 className='content-title'>{pageTitle} </h2>\r\n      <div className='content-grid'>\r\n        {!showSpineer\r\n          ? moviesList.map(movie =>\r\n              movie.poster_path ? (\r\n                <MovieItem key={movie.id} movieData={movie} />\r\n              ) : null\r\n            )\r\n          : null}\r\n      </div>\r\n      {showSpineer ? <Spinner /> : null}\r\n      {showSpineer || totalPages <= 1 ? null : (\r\n        <Pagination totalPages={totalPages} />\r\n      )}\r\n      {totalPages === 0 && !showSpineer ? <ResultsNotFound /> : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\nMoviesList.propTypes = {\r\n  showSpineer: PropTypes.bool.isRequired,\r\n  moviesList: PropTypes.array,\r\n  totalPages: PropTypes.number,\r\n  pageTitle: PropTypes.string.isRequired\r\n};\r\n","import React, { useContext } from 'react';\r\nimport gloabalContext from '../context/global/globalContext';\r\n// in the Global state we set err values should contain the error id each time some thing went wrong in the app\r\nconst ErrorHund = () => {\r\n  //pull the context values\r\n  const { err, getMovies, getMovieDetails, getRandomMovie } = useContext(\r\n    gloabalContext\r\n  );\r\n  // err with id == 6 should reload automatically without clicking the btn reload\r\n  if (err === 6) {\r\n    getRandomMovie();\r\n  }\r\n  // onclick reload(Try again) btn should fire a method by the err id\r\n  const reLoad = () => {\r\n    switch (err) {\r\n      case 1:\r\n        getMovies();\r\n        break;\r\n      case 2:\r\n        getMovieDetails();\r\n        break;\r\n      case 3:\r\n        getMovies('top_rated');\r\n        break;\r\n      case 4:\r\n        getMovies('upcoming');\r\n        break;\r\n      case 5:\r\n        getRandomMovie();\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  return (\r\n    <div className='err-hund'>\r\n      <h3> Something Went Wrong </h3>\r\n      <button onClick={reLoad}>Try again</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorHund;\r\n","import React, { Fragment, useContext, useEffect } from 'react';\r\n\r\nimport globalContext from '../../context/global/globalContext';\r\n\r\nimport MoviesList from '../MoviesList';\r\nimport ErrorHund from '../ErrorHund';\r\n\r\nconst Home = () => {\r\n  //pull context values\r\n  const {\r\n    getMovies,\r\n    searchKey,\r\n    moviesList,\r\n    loading,\r\n    err,\r\n    currentPage,\r\n    setCurrentPage,\r\n    clearMovies,\r\n    totalPages,\r\n    setCurrentPagePath,\r\n    currentPagePath,\r\n    searchKeyHund\r\n  } = useContext(globalContext);\r\n  // call getMovies func every time search input change\r\n  useEffect(() => {\r\n    getMovies();\r\n    clearMovies();\r\n    setCurrentPagePath('Home');\r\n    // eslint-disable-next-line\r\n  }, [searchKey, currentPage]);\r\n\r\n  // useEffect(() => {\r\n  //   setCurrentPage(1);\r\n  // }, [searchKey]);\r\n\r\n  // make sure that every time the page load the currentPage set to 1 and clear the search value on state\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n    searchKeyHund('');\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-body'>\r\n        {err ? (\r\n          <ErrorHund />\r\n        ) : (\r\n          <MoviesList\r\n            totalPages={totalPages}\r\n            showSpineer={loading}\r\n            moviesList={moviesList}\r\n            pageTitle={currentPagePath}\r\n          />\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const TMDB_CONTRIES_DATA = [\r\n  {\r\n    iso_3166_1: \"AD\",\r\n    english_name: \"Andorra\",\r\n  },\r\n  {\r\n    iso_3166_1: \"EN\",\r\n    english_name: \"English\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AE\",\r\n    english_name: \"United Arab Emirates\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AF\",\r\n    english_name: \"Afghanistan\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AG\",\r\n    english_name: \"Antigua and Barbuda\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AI\",\r\n    english_name: \"Anguilla\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AL\",\r\n    english_name: \"Albania\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AM\",\r\n    english_name: \"Armenia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AN\",\r\n    english_name: \"Netherlands Antilles\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AO\",\r\n    english_name: \"Angola\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AQ\",\r\n    english_name: \"Antarctica\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AR\",\r\n    english_name: \"Argentina\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AS\",\r\n    english_name: \"American Samoa\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AT\",\r\n    english_name: \"Austria\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AU\",\r\n    english_name: \"Australia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AW\",\r\n    english_name: \"Aruba\",\r\n  },\r\n  {\r\n    iso_3166_1: \"AZ\",\r\n    english_name: \"Azerbaijan\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BA\",\r\n    english_name: \"Bosnia and Herzegovina\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BB\",\r\n    english_name: \"Barbados\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BD\",\r\n    english_name: \"Bangladesh\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BE\",\r\n    english_name: \"Belgium\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BF\",\r\n    english_name: \"Burkina Faso\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BG\",\r\n    english_name: \"Bulgaria\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BH\",\r\n    english_name: \"Bahrain\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BI\",\r\n    english_name: \"Burundi\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BJ\",\r\n    english_name: \"Benin\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BM\",\r\n    english_name: \"Bermuda\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BN\",\r\n    english_name: \"Brunei Darussalam\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BO\",\r\n    english_name: \"Bolivia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BR\",\r\n    english_name: \"Brazil\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BS\",\r\n    english_name: \"Bahamas\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BT\",\r\n    english_name: \"Bhutan\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BV\",\r\n    english_name: \"Bouvet Island\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BW\",\r\n    english_name: \"Botswana\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BZ\",\r\n    english_name: \"Belize\",\r\n  },\r\n  {\r\n    iso_3166_1: \"BY\",\r\n    english_name: \"Belarus\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CA\",\r\n    english_name: \"Canada\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CC\",\r\n    english_name: \"Cocos  Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CD\",\r\n    english_name: \"Congo\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CF\",\r\n    english_name: \"Central African Republic\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CG\",\r\n    english_name: \"Congo\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CH\",\r\n    english_name: \"Switzerland\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CI\",\r\n    english_name: \"Cote D'Ivoire\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CK\",\r\n    english_name: \"Cook Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CL\",\r\n    english_name: \"Chile\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CM\",\r\n    english_name: \"Cameroon\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CN\",\r\n    english_name: \"China\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CO\",\r\n    english_name: \"Colombia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CR\",\r\n    english_name: \"Costa Rica\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CS\",\r\n    english_name: \"Serbia and Montenegro\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CU\",\r\n    english_name: \"Cuba\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CV\",\r\n    english_name: \"Cape Verde\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CX\",\r\n    english_name: \"Christmas Island\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CY\",\r\n    english_name: \"Cyprus\",\r\n  },\r\n  {\r\n    iso_3166_1: \"CZ\",\r\n    english_name: \"Czech Republic\",\r\n  },\r\n  {\r\n    iso_3166_1: \"DE\",\r\n    english_name: \"Germany\",\r\n  },\r\n  {\r\n    iso_3166_1: \"DJ\",\r\n    english_name: \"Djibouti\",\r\n  },\r\n  {\r\n    iso_3166_1: \"DK\",\r\n    english_name: \"Denmark\",\r\n  },\r\n  {\r\n    iso_3166_1: \"DM\",\r\n    english_name: \"Dominica\",\r\n  },\r\n  {\r\n    iso_3166_1: \"DO\",\r\n    english_name: \"Dominican Republic\",\r\n  },\r\n  {\r\n    iso_3166_1: \"DZ\",\r\n    english_name: \"Algeria\",\r\n  },\r\n  {\r\n    iso_3166_1: \"EC\",\r\n    english_name: \"Ecuador\",\r\n  },\r\n  {\r\n    iso_3166_1: \"EE\",\r\n    english_name: \"Estonia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"EG\",\r\n    english_name: \"Egypt\",\r\n  },\r\n  {\r\n    iso_3166_1: \"EH\",\r\n    english_name: \"Western Sahara\",\r\n  },\r\n  {\r\n    iso_3166_1: \"ER\",\r\n    english_name: \"Eritrea\",\r\n  },\r\n  {\r\n    iso_3166_1: \"ES\",\r\n    english_name: \"Spain\",\r\n  },\r\n  {\r\n    iso_3166_1: \"ET\",\r\n    english_name: \"Ethiopia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"FI\",\r\n    english_name: \"Finland\",\r\n  },\r\n  {\r\n    iso_3166_1: \"FJ\",\r\n    english_name: \"Fiji\",\r\n  },\r\n  {\r\n    iso_3166_1: \"FK\",\r\n    english_name: \"Falkland Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"RS\",\r\n    english_name: \"Serbia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"FM\",\r\n    english_name: \"Micronesia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"FO\",\r\n    english_name: \"Faeroe Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"FR\",\r\n    english_name: \"France\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GA\",\r\n    english_name: \"Gabon\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GB\",\r\n    english_name: \"United Kingdom\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GD\",\r\n    english_name: \"Grenada\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GE\",\r\n    english_name: \"Georgia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GF\",\r\n    english_name: \"French Guiana\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GH\",\r\n    english_name: \"Ghana\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GI\",\r\n    english_name: \"Gibraltar\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GL\",\r\n    english_name: \"Greenland\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GM\",\r\n    english_name: \"Gambia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GN\",\r\n    english_name: \"Guinea\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GP\",\r\n    english_name: \"Guadaloupe\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GQ\",\r\n    english_name: \"Equatorial Guinea\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GR\",\r\n    english_name: \"Greece\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GS\",\r\n    english_name: \"South Georgia and the South Sandwich Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GT\",\r\n    english_name: \"Guatemala\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GU\",\r\n    english_name: \"Guam\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GW\",\r\n    english_name: \"Guinea-Bissau\",\r\n  },\r\n  {\r\n    iso_3166_1: \"GY\",\r\n    english_name: \"Guyana\",\r\n  },\r\n  {\r\n    iso_3166_1: \"HK\",\r\n    english_name: \"Hong Kong\",\r\n  },\r\n  {\r\n    iso_3166_1: \"HM\",\r\n    english_name: \"Heard and McDonald Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"HN\",\r\n    english_name: \"Honduras\",\r\n  },\r\n  {\r\n    iso_3166_1: \"HR\",\r\n    english_name: \"Croatia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"HT\",\r\n    english_name: \"Haiti\",\r\n  },\r\n  {\r\n    iso_3166_1: \"HU\",\r\n    english_name: \"Hungary\",\r\n  },\r\n  {\r\n    iso_3166_1: \"ID\",\r\n    english_name: \"Indonesia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"IE\",\r\n    english_name: \"Ireland\",\r\n  },\r\n  {\r\n    iso_3166_1: \"IL\",\r\n    english_name: \"Israel\",\r\n  },\r\n  {\r\n    iso_3166_1: \"IN\",\r\n    english_name: \"India\",\r\n  },\r\n  {\r\n    iso_3166_1: \"IO\",\r\n    english_name: \"British Indian Ocean Territory\",\r\n  },\r\n  {\r\n    iso_3166_1: \"IQ\",\r\n    english_name: \"Iraq\",\r\n  },\r\n  {\r\n    iso_3166_1: \"IR\",\r\n    english_name: \"Iran\",\r\n  },\r\n  {\r\n    iso_3166_1: \"IS\",\r\n    english_name: \"Iceland\",\r\n  },\r\n  {\r\n    iso_3166_1: \"IT\",\r\n    english_name: \"Italy\",\r\n  },\r\n  {\r\n    iso_3166_1: \"JM\",\r\n    english_name: \"Jamaica\",\r\n  },\r\n  {\r\n    iso_3166_1: \"JO\",\r\n    english_name: \"Jordan\",\r\n  },\r\n  {\r\n    iso_3166_1: \"JP\",\r\n    english_name: \"Japan\",\r\n  },\r\n  {\r\n    iso_3166_1: \"KE\",\r\n    english_name: \"Kenya\",\r\n  },\r\n  {\r\n    iso_3166_1: \"KG\",\r\n    english_name: \"Kyrgyz Republic\",\r\n  },\r\n  {\r\n    iso_3166_1: \"KH\",\r\n    english_name: \"Cambodia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"KI\",\r\n    english_name: \"Kiribati\",\r\n  },\r\n  {\r\n    iso_3166_1: \"KM\",\r\n    english_name: \"Comoros\",\r\n  },\r\n  {\r\n    iso_3166_1: \"KN\",\r\n    english_name: \"St. Kitts and Nevis\",\r\n  },\r\n  {\r\n    iso_3166_1: \"KP\",\r\n    english_name: \"North Korea\",\r\n  },\r\n  {\r\n    iso_3166_1: \"KW\",\r\n    english_name: \"Kuwait\",\r\n  },\r\n  {\r\n    iso_3166_1: \"KY\",\r\n    english_name: \"Cayman Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"KZ\",\r\n    english_name: \"Kazakhstan\",\r\n  },\r\n  {\r\n    iso_3166_1: \"LA\",\r\n    english_name: \"Lao People's Democratic Republic\",\r\n  },\r\n  {\r\n    iso_3166_1: \"LB\",\r\n    english_name: \"Lebanon\",\r\n  },\r\n  {\r\n    iso_3166_1: \"LC\",\r\n    english_name: \"St. Lucia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"LI\",\r\n    english_name: \"Liechtenstein\",\r\n  },\r\n  {\r\n    iso_3166_1: \"LK\",\r\n    english_name: \"Sri Lanka\",\r\n  },\r\n  {\r\n    iso_3166_1: \"LR\",\r\n    english_name: \"Liberia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"LS\",\r\n    english_name: \"Lesotho\",\r\n  },\r\n  {\r\n    iso_3166_1: \"LT\",\r\n    english_name: \"Lithuania\",\r\n  },\r\n  {\r\n    iso_3166_1: \"LU\",\r\n    english_name: \"Luxembourg\",\r\n  },\r\n  {\r\n    iso_3166_1: \"LV\",\r\n    english_name: \"Latvia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"LY\",\r\n    english_name: \"Libyan Arab Jamahiriya\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MA\",\r\n    english_name: \"Morocco\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MC\",\r\n    english_name: \"Monaco\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MD\",\r\n    english_name: \"Moldova\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MG\",\r\n    english_name: \"Madagascar\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MH\",\r\n    english_name: \"Marshall Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MK\",\r\n    english_name: \"Macedonia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"ML\",\r\n    english_name: \"Mali\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MM\",\r\n    english_name: \"Myanmar\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MN\",\r\n    english_name: \"Mongolia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MO\",\r\n    english_name: \"Macao\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MP\",\r\n    english_name: \"Northern Mariana Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MQ\",\r\n    english_name: \"Martinique\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MR\",\r\n    english_name: \"Mauritania\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MS\",\r\n    english_name: \"Montserrat\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MT\",\r\n    english_name: \"Malta\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MU\",\r\n    english_name: \"Mauritius\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MV\",\r\n    english_name: \"Maldives\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MW\",\r\n    english_name: \"Malawi\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MX\",\r\n    english_name: \"Mexico\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MY\",\r\n    english_name: \"Malaysia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"MZ\",\r\n    english_name: \"Mozambique\",\r\n  },\r\n  {\r\n    iso_3166_1: \"NA\",\r\n    english_name: \"Namibia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"NC\",\r\n    english_name: \"New Caledonia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"NE\",\r\n    english_name: \"Niger\",\r\n  },\r\n  {\r\n    iso_3166_1: \"NF\",\r\n    english_name: \"Norfolk Island\",\r\n  },\r\n  {\r\n    iso_3166_1: \"NG\",\r\n    english_name: \"Nigeria\",\r\n  },\r\n  {\r\n    iso_3166_1: \"ME\",\r\n    english_name: \"Montenegro\",\r\n  },\r\n  {\r\n    iso_3166_1: \"NI\",\r\n    english_name: \"Nicaragua\",\r\n  },\r\n  {\r\n    iso_3166_1: \"NL\",\r\n    english_name: \"Netherlands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"NO\",\r\n    english_name: \"Norway\",\r\n  },\r\n  {\r\n    iso_3166_1: \"NP\",\r\n    english_name: \"Nepal\",\r\n  },\r\n  {\r\n    iso_3166_1: \"NR\",\r\n    english_name: \"Nauru\",\r\n  },\r\n  {\r\n    iso_3166_1: \"NU\",\r\n    english_name: \"Niue\",\r\n  },\r\n  {\r\n    iso_3166_1: \"NZ\",\r\n    english_name: \"New Zealand\",\r\n  },\r\n  {\r\n    iso_3166_1: \"OM\",\r\n    english_name: \"Oman\",\r\n  },\r\n  {\r\n    iso_3166_1: \"PA\",\r\n    english_name: \"Panama\",\r\n  },\r\n  {\r\n    iso_3166_1: \"PE\",\r\n    english_name: \"Peru\",\r\n  },\r\n  {\r\n    iso_3166_1: \"PF\",\r\n    english_name: \"French Polynesia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"PG\",\r\n    english_name: \"Papua New Guinea\",\r\n  },\r\n  {\r\n    iso_3166_1: \"PH\",\r\n    english_name: \"Philippines\",\r\n  },\r\n  {\r\n    iso_3166_1: \"YU\",\r\n    english_name: \"Yugoslavia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"XK\",\r\n    english_name: \"Kosovo\",\r\n  },\r\n  {\r\n    iso_3166_1: \"XC\",\r\n    english_name: \"Czechoslovakia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"PK\",\r\n    english_name: \"Pakistan\",\r\n  },\r\n  {\r\n    iso_3166_1: \"PL\",\r\n    english_name: \"Poland\",\r\n  },\r\n  {\r\n    iso_3166_1: \"PM\",\r\n    english_name: \"St. Pierre and Miquelon\",\r\n  },\r\n  {\r\n    iso_3166_1: \"PN\",\r\n    english_name: \"Pitcairn Island\",\r\n  },\r\n  {\r\n    iso_3166_1: \"PR\",\r\n    english_name: \"Puerto Rico\",\r\n  },\r\n  {\r\n    iso_3166_1: \"PS\",\r\n    english_name: \"Palestinian Territory\",\r\n  },\r\n  {\r\n    iso_3166_1: \"PT\",\r\n    english_name: \"Portugal\",\r\n  },\r\n  {\r\n    iso_3166_1: \"PW\",\r\n    english_name: \"Palau\",\r\n  },\r\n  {\r\n    iso_3166_1: \"PY\",\r\n    english_name: \"Paraguay\",\r\n  },\r\n  {\r\n    iso_3166_1: \"QA\",\r\n    english_name: \"Qatar\",\r\n  },\r\n  {\r\n    iso_3166_1: \"RE\",\r\n    english_name: \"Reunion\",\r\n  },\r\n  {\r\n    iso_3166_1: \"RO\",\r\n    english_name: \"Romania\",\r\n  },\r\n  {\r\n    iso_3166_1: \"RU\",\r\n    english_name: \"Russia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"RW\",\r\n    english_name: \"Rwanda\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SA\",\r\n    english_name: \"Saudi Arabia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SB\",\r\n    english_name: \"Solomon Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SC\",\r\n    english_name: \"Seychelles\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SD\",\r\n    english_name: \"Sudan\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SE\",\r\n    english_name: \"Sweden\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SG\",\r\n    english_name: \"Singapore\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SH\",\r\n    english_name: \"St. Helena\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SI\",\r\n    english_name: \"Slovenia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SJ\",\r\n    english_name: \"Svalbard & Jan Mayen Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SK\",\r\n    english_name: \"Slovakia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SL\",\r\n    english_name: \"Sierra Leone\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SM\",\r\n    english_name: \"San Marino\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SN\",\r\n    english_name: \"Senegal\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SO\",\r\n    english_name: \"Somalia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SR\",\r\n    english_name: \"Suriname\",\r\n  },\r\n  {\r\n    iso_3166_1: \"ST\",\r\n    english_name: \"Sao Tome and Principe\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SV\",\r\n    english_name: \"El Salvador\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SY\",\r\n    english_name: \"Syrian Arab Republic\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SZ\",\r\n    english_name: \"Swaziland\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TC\",\r\n    english_name: \"Turks and Caicos Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TD\",\r\n    english_name: \"Chad\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TF\",\r\n    english_name: \"French Southern Territories\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TG\",\r\n    english_name: \"Togo\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TH\",\r\n    english_name: \"Thailand\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TJ\",\r\n    english_name: \"Tajikistan\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TK\",\r\n    english_name: \"Tokelau\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TL\",\r\n    english_name: \"Timor-Leste\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TM\",\r\n    english_name: \"Turkmenistan\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TN\",\r\n    english_name: \"Tunisia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TO\",\r\n    english_name: \"Tonga\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TR\",\r\n    english_name: \"Turkey\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TT\",\r\n    english_name: \"Trinidad and Tobago\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TV\",\r\n    english_name: \"Tuvalu\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TW\",\r\n    english_name: \"Taiwan\",\r\n  },\r\n  {\r\n    iso_3166_1: \"TZ\",\r\n    english_name: \"Tanzania\",\r\n  },\r\n  {\r\n    iso_3166_1: \"UA\",\r\n    english_name: \"Ukraine\",\r\n  },\r\n  {\r\n    iso_3166_1: \"UG\",\r\n    english_name: \"Uganda\",\r\n  },\r\n  {\r\n    iso_3166_1: \"UM\",\r\n    english_name: \"United States Minor Outlying Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"US\",\r\n    english_name: \"United States of America\",\r\n  },\r\n  {\r\n    iso_3166_1: \"UY\",\r\n    english_name: \"Uruguay\",\r\n  },\r\n  {\r\n    iso_3166_1: \"UZ\",\r\n    english_name: \"Uzbekistan\",\r\n  },\r\n  {\r\n    iso_3166_1: \"VA\",\r\n    english_name: \"Holy See\",\r\n  },\r\n  {\r\n    iso_3166_1: \"VC\",\r\n    english_name: \"St. Vincent and the Grenadines\",\r\n  },\r\n  {\r\n    iso_3166_1: \"VE\",\r\n    english_name: \"Venezuela\",\r\n  },\r\n  {\r\n    iso_3166_1: \"VG\",\r\n    english_name: \"British Virgin Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"VI\",\r\n    english_name: \"US Virgin Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"VN\",\r\n    english_name: \"Vietnam\",\r\n  },\r\n  {\r\n    iso_3166_1: \"VU\",\r\n    english_name: \"Vanuatu\",\r\n  },\r\n  {\r\n    iso_3166_1: \"WF\",\r\n    english_name: \"Wallis and Futuna Islands\",\r\n  },\r\n  {\r\n    iso_3166_1: \"WS\",\r\n    english_name: \"Samoa\",\r\n  },\r\n  {\r\n    iso_3166_1: \"YE\",\r\n    english_name: \"Yemen\",\r\n  },\r\n  {\r\n    iso_3166_1: \"YT\",\r\n    english_name: \"Mayotte\",\r\n  },\r\n  {\r\n    iso_3166_1: \"ZA\",\r\n    english_name: \"South Africa\",\r\n  },\r\n  {\r\n    iso_3166_1: \"ZM\",\r\n    english_name: \"Zambia\",\r\n  },\r\n  {\r\n    iso_3166_1: \"ZW\",\r\n    english_name: \"Zimbabwe\",\r\n  },\r\n  {\r\n    iso_3166_1: \"KR\",\r\n    english_name: \"South Korea\",\r\n  },\r\n  {\r\n    iso_3166_1: \"XG\",\r\n    english_name: \"East Germany\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SU\",\r\n    english_name: \"Soviet Union\",\r\n  },\r\n  {\r\n    iso_3166_1: \"SS\",\r\n    english_name: \"South Sudan\",\r\n  },\r\n];\r\nexport default TMDB_CONTRIES_DATA;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TMDB_CONTRIES_DATA from '../data/TMDB_CONTRIES_DATA';\r\nconst DetailsItem = ({\r\n  singleMovieData: {\r\n    poster_path,\r\n    title,\r\n    vote_average,\r\n    original_language,\r\n    runtime,\r\n    genres,\r\n    production_companies,\r\n    overview,\r\n    release_date\r\n  },\r\n  movieCast\r\n}) => {\r\n  // the movie langues or country comme from the API like this => it : italy  , so we had to get the full contry name from TMDB_COUNTRIES_DATA by filter it\r\n  const getCountryName = id => {\r\n    if (id) {\r\n      const filterCountry = TMDB_CONTRIES_DATA.filter(\r\n        item => item.iso_3166_1 === id.toUpperCase()\r\n      );\r\n      return filterCountry[0].english_name + ' /';\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className='details'\r\n      style={{\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/w400${poster_path})`\r\n      }}\r\n    >\r\n      <div className='empty'></div>\r\n      <div className='content-flex'>\r\n        <div className='poster-img'>\r\n          <img\r\n            alt='poster img'\r\n            src={`https://image.tmdb.org/t/p/w400${poster_path}`}\r\n          />\r\n        </div>\r\n        <div className='content'>\r\n          <h2 className='item-title'> {title} </h2>\r\n          <div className='info'>\r\n            <span>\r\n              {production_companies\r\n                ? `${production_companies[0].name} / `\r\n                : null}\r\n            </span>\r\n            <span> {getCountryName(original_language)}</span>\r\n            <span>\r\n              {release_date ? `${release_date.slice(0, 4)} / ` : null}\r\n            </span>\r\n            <span> {runtime + ' min'} </span>\r\n          </div>\r\n          <div className='rating-genre'>\r\n            <div className='rating'>\r\n              {vote_average} <i className='fa fa-star'></i>\r\n            </div>\r\n            <div className='genere'>\r\n              {genres\r\n                ? genres.map(genre => (\r\n                    <span key={genre.id}>{genre.name + ' '}</span>\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </div>\r\n          <div className='overview'>\r\n            <h3>OVERVIEW</h3>\r\n            <p>{overview}</p>\r\n          </div>\r\n          <div className='cast'>\r\n            <h3 className='cast'>TOP CASTS</h3>\r\n            <div className='cast-grid'>\r\n              {movieCast\r\n                ? movieCast.map(cast =>\r\n                    cast.profile_path ? (\r\n                      <div className='cast-item' key={cast.id}>\r\n                        <img\r\n                          alt='poster img'\r\n                          src={`https://image.tmdb.org/t/p/w200${cast.profile_path}`}\r\n                        />\r\n                        <div> {cast.name} </div>\r\n                      </div>\r\n                    ) : null\r\n                  )\r\n                : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nDetailsItem.propTypes = {\r\n  movieCast: PropTypes.array.isRequired\r\n};\r\nexport default DetailsItem;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport GloabalContext from '../../context/global/globalContext';\r\n\r\nimport DetailsItem from '../DetailsItem';\r\nimport ErrorHund from '../ErrorHund';\r\nimport Spinner from '../Spinner';\r\nconst DeatailsPage = ({ match }) => {\r\n  //pull the states and the nedeed methods from the context\r\n  const {\r\n    getMovieDetails,\r\n    movieDetails,\r\n    loading,\r\n    movieCast,\r\n    err,\r\n    clearMovieDetails\r\n  } = useContext(GloabalContext);\r\n  // each time the page is loaded getMovieDetails to get the data by params id\r\n  useEffect(() => {\r\n    clearMovieDetails();\r\n    getMovieDetails(match.params.id);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '100%',\r\n        minHeight: '699px',\r\n        zIndex: '99',\r\n        position: 'relative',\r\n        backgroundColor: 'red',\r\n        background: '-webkit-linear-gradient(left, #3146bb -30%, #ff5050 104%)'\r\n      }}\r\n    >\r\n      {err ? <ErrorHund /> : null}\r\n\r\n      {loading || !movieCast ? (\r\n        <div style={{ paddingTop: '200px' }}>\r\n          <Spinner />\r\n        </div>\r\n      ) : (\r\n        <DetailsItem\r\n          showSpinner={loading}\r\n          singleMovieData={movieDetails}\r\n          movieCast={movieCast}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nDeatailsPage.propTypes = {\r\n  match: PropTypes.object.isRequired\r\n};\r\nexport default DeatailsPage;\r\n","import React, { useContext, useEffect } from 'react';\r\n\r\nimport globalContext from '../../context/global/globalContext';\r\n\r\nimport MoviesList from '../MoviesList';\r\nimport ErrorHund from '../ErrorHund';\r\nconst TopMoviesPage = () => {\r\n  //pull context values\r\n  const {\r\n    getMovies,\r\n    moviesList,\r\n    loading,\r\n    err,\r\n    currentPage,\r\n    setCurrentPagePath,\r\n    totalPages,\r\n    currentPagePath,\r\n    searchKey,\r\n    setCurrentPage,\r\n    searchKeyHund\r\n  } = useContext(globalContext);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n    searchKeyHund('');\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  // call getMovies func every time search value or currentOage value change\r\n  useEffect(() => {\r\n    getMovies('top_rated');\r\n    setCurrentPagePath('Top Movies');\r\n    // eslint-disable-next-line\r\n  }, [currentPage, searchKey]);\r\n\r\n  return (\r\n    <div className='content-body'>\r\n      {err ? (\r\n        <ErrorHund />\r\n      ) : (\r\n        <MoviesList\r\n          totalPages={totalPages}\r\n          showSpineer={loading}\r\n          moviesList={moviesList}\r\n          pageTitle={currentPagePath}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopMoviesPage;\r\n","import React, { useEffect, useContext } from 'react';\r\n\r\nimport globalContext from '../../context/global/globalContext';\r\n\r\nimport MoviesList from '../MoviesList';\r\nimport ErrorHund from '../ErrorHund';\r\nconst TopSeriesPage = () => {\r\n  //pull the the context values\r\n  const {\r\n    currentPage,\r\n    moviesList,\r\n    totalPages,\r\n    loading,\r\n    err,\r\n    getMovies,\r\n    searchKey,\r\n    setCurrentPagePath,\r\n    currentPagePath,\r\n    setCurrentPage,\r\n    searchKeyHund\r\n  } = useContext(globalContext);\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n    searchKeyHund('');\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  useEffect(() => {\r\n    setCurrentPagePath('Upcoming');\r\n    getMovies('upcoming');\r\n    // eslint-disable-next-line\r\n  }, [currentPage, searchKey]);\r\n  return (\r\n    <div className='content-body'>\r\n      {err ? (\r\n        <ErrorHund />\r\n      ) : (\r\n        <MoviesList\r\n          totalPages={totalPages}\r\n          showSpineer={loading}\r\n          moviesList={moviesList}\r\n          pageTitle={currentPagePath}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopSeriesPage;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from './Spinner';\r\n\r\nconst RandomMovie = ({\r\n  movieData: { id, title, poster_path, vote_average, release_date, genres },\r\n  showSpinner,\r\n  history\r\n}) => {\r\n  return (\r\n    <div className='random'>\r\n      {!showSpinner ? (\r\n        <div\r\n          className='movies-item'\r\n          onClick={() => history.push(`/details/${id}`)}\r\n        >\r\n          <span className='rating'>{vote_average}</span>\r\n          <img\r\n            alt='poster img'\r\n            src={`https://image.tmdb.org/t/p/w200${poster_path}`}\r\n          />\r\n          <h2 className='title'>\r\n            {title}\r\n            <span>\r\n              {' '}\r\n              {release_date ? `(${release_date.slice(0, 4)}) ` : null}\r\n            </span>\r\n          </h2>\r\n          <div className='genre'>\r\n            {genres\r\n              ? genres\r\n                  .slice(0, 2)\r\n                  .map(genre => <span key={genre.id}> {genre.name} </span>)\r\n              : null}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(RandomMovie);\r\nRandomMovie.propTypes = {\r\n  showSpinner: PropTypes.bool.isRequired,\r\n  history: PropTypes.object.isRequired\r\n};\r\n","import React, { useEffect, useContext, Fragment } from 'react';\r\n\r\nimport globalContext from '../../context/global/globalContext';\r\n\r\nimport RandomMovie from '../RadomMovie';\r\nimport ErrorHund from '../ErrorHund';\r\n\r\nconst RandomPage = () => {\r\n  //pull context values\r\n  const {\r\n    getRandomMovie,\r\n    err,\r\n    randomMovie,\r\n    loading,\r\n    setCurrentPagePath\r\n  } = useContext(globalContext);\r\n  // get getRandomMovie func every time the page loaded\r\n  useEffect(() => {\r\n    setCurrentPagePath('Random');\r\n    getRandomMovie();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <div className='content-body' style={{ textAlign: 'center' }}>\r\n      {err ? (\r\n        <ErrorHund />\r\n      ) : (\r\n        <Fragment>\r\n          <RandomMovie showSpinner={loading} movieData={randomMovie} />\r\n          {!loading ? (\r\n            <button className='random-btn' onClick={() => getRandomMovie()}>\r\n              generate\r\n            </button>\r\n          ) : null}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomPage;\r\n","import React, { useContext } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport globalContext from '../context/global/globalContext';\r\nconst Search = ({ history }) => {\r\n  // pull context values\r\n  const { searchKeyHund, searchKey } = useContext(globalContext);\r\n\r\n  return (\r\n    <div className='search-sec'>\r\n      <div className='logo' onClick={() => history.push('/')}>\r\n        Movies Land\r\n      </div>\r\n      <div className='search'>\r\n        <i className='fa fa-search'></i>\r\n        <input\r\n          onChange={e => searchKeyHund(e.target.value)}\r\n          value={searchKey}\r\n          name='search'\r\n          type='search'\r\n          placeholder='Search Movies...'\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(Search);\r\nSearch.propTypes = {\r\n  history: PropTypes.object.isRequired\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport globalContext from '../context/global/globalContext';\r\n\r\nconst Navbar = () => {\r\n  //pull the context values\r\n  const { setCurrentPagePath, currentPagePath } = useContext(globalContext);\r\n  // navbar links\r\n  const links = [\r\n    { name: 'Home', path: '/' },\r\n    { name: 'Top Movies', path: '/top_movies' },\r\n    { name: 'Upcoming', path: '/upcoming' },\r\n    { name: 'Random', path: '/random' }\r\n  ];\r\n\r\n  return (\r\n    <div className='navigation'>\r\n      <ul className='nav-ul'>\r\n        {links.map(link => (\r\n          <li\r\n            onClick={() => setCurrentPagePath(link.name)}\r\n            className={currentPagePath === link.name ? 'active' : null}\r\n            key={link.name}\r\n          >\r\n            <Link to={link.path}> {link.name} </Link>{' '}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./component/Pages/Home\";\r\nimport DetailsPage from \"./component/Pages/DeatailsPage\";\r\nimport TopMoviesPage from \"./component/Pages/TopMoviesPage\";\r\nimport UpComingPage from \"./component/Pages/UpComingPage\";\r\nimport RandomPage from \"./component/Pages/RandomPage\";\r\nimport Search from \"./component/Search\";\r\nimport Navbar from \"./component/Navbar\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Search />\r\n      <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Route exact path='/details/:id' component={DetailsPage} />\r\n        <Route exact path='/top_movies' component={TopMoviesPage} />\r\n        <Route exact path='/upcoming' component={UpComingPage} />\r\n        <Route exact path='/random' component={RandomPage} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {\r\n  SET_LOADING,\r\n  SET_SEARCH_KEY_TO_STATE,\r\n  SET_MOVIES_DATA,\r\n  SET_MOVIE_DETAILS,\r\n  SET_MOVIE_CAST,\r\n  SET_ERROR,\r\n  CLEAR_MOVIES,\r\n  CLEAR_MOVIE_DETAILS,\r\n  SET_TOTAL_PAGES,\r\n  SET_CURRENT_PAGE,\r\n  SET_RANDOM_MOVIE_TO_STATE,\r\n  SET_CURRENT_PAGE_PATH\r\n} from './types';\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_SEARCH_KEY_TO_STATE:\r\n      return {\r\n        ...state,\r\n        searchKey: action.payload\r\n      };\r\n      break;\r\n    case SET_MOVIES_DATA:\r\n      return {\r\n        ...state,\r\n        moviesList: action.payload,\r\n        loading: false\r\n      };\r\n      break;\r\n    case SET_MOVIE_DETAILS:\r\n      return {\r\n        ...state,\r\n        movieDetails: action.payload,\r\n        loading: false\r\n      };\r\n      break;\r\n    case SET_MOVIE_CAST:\r\n      return {\r\n        ...state,\r\n        movieCast: action.payload,\r\n        loading: false\r\n      };\r\n      break;\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n      break;\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        err: action.payload\r\n      };\r\n      break;\r\n    case CLEAR_MOVIES:\r\n      return {\r\n        ...state,\r\n        moviesList: []\r\n      };\r\n      break;\r\n    case CLEAR_MOVIE_DETAILS:\r\n      return {\r\n        ...state,\r\n        movieDetails: [],\r\n        tes: null\r\n      };\r\n      break;\r\n    case SET_TOTAL_PAGES:\r\n      return {\r\n        ...state,\r\n        totalPages: action.payload\r\n      };\r\n      break;\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload\r\n      };\r\n      break;\r\n    case SET_CURRENT_PAGE_PATH:\r\n      return {\r\n        ...state,\r\n        currentPagePath: action.payload\r\n      };\r\n      break;\r\n    case SET_RANDOM_MOVIE_TO_STATE:\r\n      return {\r\n        ...state,\r\n        randomMovie: action.payload,\r\n        loading: false\r\n      };\r\n      break;\r\n    default:\r\n      return {\r\n        ...state\r\n      };\r\n  }\r\n};\r\n","export const SET_LOADING = \"SET_LOADING\";\r\nexport const SET_SEARCH_KEY_TO_STATE = \"SET_SEARCH_KEY_TO_STATE\";\r\nexport const SET_MOVIES_DATA = \"SET_MOVIES_DATA\";\r\nexport const SET_MOVIE_DETAILS = \"SET_MOVIE_DETAILS\";\r\nexport const SET_MOVIE_CAST = \"SET_MOVIE_CAST\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const CLEAR_MOVIES = \"CLEAR_MOVIES\";\r\nexport const CLEAR_MOVIE_DETAILS = \"CLEAR_MOVIE_DETAILS\";\r\nexport const SET_TOTAL_PAGES = \"SET_TOTAL_PAGES\";\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nexport const SET_SERIES_TO_STATE = \"SET_SERIES_TO_STATE\";\r\nexport const SET_RANDOM_MOVIE_TO_STATE = \"SET_RANDOM_MOVIE_TO_STATE\";\r\nexport const SET_CURRENT_PAGE_PATH = \"SET_CURRENT_PAGE_PATH\";\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport GlobalContext from './globalContext';\r\nimport globalReducer from './globalReducer';\r\nimport {\r\n  SET_LOADING,\r\n  SET_SEARCH_KEY_TO_STATE,\r\n  SET_MOVIES_DATA,\r\n  SET_ERROR,\r\n  SET_MOVIE_DETAILS,\r\n  SET_MOVIE_CAST,\r\n  CLEAR_MOVIES,\r\n  CLEAR_MOVIE_DETAILS,\r\n  SET_TOTAL_PAGES,\r\n  SET_CURRENT_PAGE,\r\n  SET_RANDOM_MOVIE_TO_STATE,\r\n  SET_CURRENT_PAGE_PATH\r\n} from './types';\r\n\r\nconst GlobalState = props => {\r\n  const initState = {\r\n    currentPagePath: 'Home',\r\n    moviesList: [],\r\n    seriesList: [],\r\n    movieDetails: [],\r\n    movieCast: [],\r\n    randomMovie: [],\r\n    searchKey: '',\r\n    currentPage: 1,\r\n    totalPages: null,\r\n    loading: false,\r\n    err: null\r\n  };\r\n  //init the reducer\r\n  const [state, dispatch] = useReducer(globalReducer, initState);\r\n\r\n  const searchKeyHund = keyVal =>\r\n    dispatch({ type: SET_SEARCH_KEY_TO_STATE, payload: keyVal });\r\n  const setLoading = bool => dispatch({ type: SET_LOADING, payload: bool });\r\n  const setError = val => dispatch({ type: SET_ERROR, payload: val });\r\n  const clearMovies = () => dispatch({ type: CLEAR_MOVIES });\r\n  const clearMovieDetails = () => dispatch({ type: CLEAR_MOVIE_DETAILS });\r\n  const setTotalPages = value =>\r\n    dispatch({ type: SET_TOTAL_PAGES, payload: value });\r\n  const setCurrentPage = value =>\r\n    dispatch({ type: SET_CURRENT_PAGE, payload: value });\r\n  const setCurrentPagePath = path =>\r\n    dispatch({ type: SET_CURRENT_PAGE_PATH, payload: path });\r\n\r\n  // main func that's get data from the API , searchBy =>\r\n  const getMovies = fetchBy => {\r\n    setLoading(true);\r\n    setError(null);\r\n    if (state.searchKey.length > 0) {\r\n      // get data from the API by search key\r\n      axios\r\n        .get(\r\n          `/api/movies/?key_word=${state.searchKey}&page=${state.currentPage}`\r\n        )\r\n        .then(res => {\r\n          dispatch({ type: SET_MOVIES_DATA, payload: res.data.results });\r\n          setTotalPages(res.data.total_pages);\r\n          setLoading(false);\r\n          setError(null);\r\n        })\r\n        .catch(err => {\r\n          setLoading(false);\r\n          setError(1);\r\n        });\r\n    } else {\r\n      /// fetch by upcoming or top movies or get default\r\n      axios\r\n        .get(\r\n          `api/movies/genres/?serach_by=${fetchBy || ''}&page=${\r\n            state.currentPage\r\n          }`\r\n        )\r\n        .then(res => {\r\n          setLoading(false);\r\n          dispatch({ type: SET_MOVIES_DATA, payload: res.data.results });\r\n          setTotalPages(res.data.total_pages);\r\n        })\r\n        .catch(err => {\r\n          setLoading(false);\r\n          fetchBy ? setError(3) : setError(1);\r\n        });\r\n    }\r\n  };\r\n  const getMovieDetails = id => {\r\n    setLoading(true);\r\n    setError(null);\r\n    clearMovieDetails();\r\n    axios\r\n      .get(`/api/movie/details/${id}`)\r\n      .then(res => {\r\n        dispatch({ type: SET_MOVIE_DETAILS, payload: res.data });\r\n\r\n        axios.get(`/api/movie/cast/${id}`).then(res => {\r\n          dispatch({ type: SET_MOVIE_CAST, payload: res.data.cast });\r\n          setError(null);\r\n          setLoading(false);\r\n        });\r\n        setError(null);\r\n      })\r\n\r\n      .catch(err => {\r\n        setError(2);\r\n        setLoading(false);\r\n      });\r\n  };\r\n  /// get Random movie item by generete random id\r\n  const getRandomMovie = () => {\r\n    const randomId = Math.floor(Math.random() * 10000);\r\n    setLoading(true);\r\n    setError(null);\r\n    axios\r\n      .get(`/api/movie/details/${randomId}`)\r\n      .then(res => {\r\n        setLoading(false);\r\n        res.data.poster_path\r\n          ? dispatch({\r\n              type: SET_RANDOM_MOVIE_TO_STATE,\r\n              payload: res.data\r\n            })\r\n          : setError(6);\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        !err.response ? setError(5) : setError(6);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        moviesList: state.moviesList,\r\n        movieDetails: state.movieDetails,\r\n        searchKey: state.searchKey,\r\n        currentPagePath: state.currentPagePath,\r\n        loading: state.loading,\r\n        err: state.err,\r\n        movieCast: state.movieCast,\r\n        totalPages: state.totalPages,\r\n        currentPage: state.currentPage,\r\n        seriesList: state.seriesList,\r\n        randomMovie: state.randomMovie,\r\n        searchKeyHund,\r\n        getMovies,\r\n        getMovieDetails,\r\n        clearMovies,\r\n        setCurrentPage,\r\n        getRandomMovie,\r\n        clearMovieDetails,\r\n        setCurrentPagePath\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\nexport default GlobalState;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport GloabalState from \"./context/global/GlobalState\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nconst app = (\r\n  <GloabalState>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </GloabalState>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}